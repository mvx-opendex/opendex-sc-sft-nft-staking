{
    "buildInfo": {
        "rustc": {
            "version": "1.84.0",
            "commitHash": "9fc6b43126469e3858e2fe86cafb4f0fd5068869",
            "commitDate": "2025-01-07",
            "channel": "Stable",
            "short": "rustc 1.84.0 (9fc6b4312 2025-01-07)"
        },
        "contractCrate": {
            "name": "opendex-sc-sft-nft-staking",
            "version": "0.0.0"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.56.1"
        }
    },
    "docs": [
        "A staking contract for SFTs that issues NFTs as staking positions.",
        "Users stake SFTs, receive NFTs, and earn rewards over time."
    ],
    "name": "OpendexSftNftStaking",
    "constructor": {
        "inputs": [
            {
                "name": "staking_sft_collection_id",
                "type": "TokenIdentifier"
            },
            {
                "name": "reward_token",
                "type": "EgldOrEsdtTokenIdentifier"
            },
            {
                "name": "fee_receiver",
                "type": "Address"
            },
            {
                "name": "performance_fee",
                "type": "u32"
            },
            {
                "name": "funder",
                "type": "Address"
            }
        ],
        "outputs": []
    },
    "endpoints": [
        {
            "name": "getStakingSftCollectionId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "name": "getRewardToken",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "EgldOrEsdtTokenIdentifier"
                }
            ]
        },
        {
            "name": "getStakedNftCollectionId",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "TokenIdentifier"
                }
            ]
        },
        {
            "docs": [
                "Return amount of reward per second (multiplied by 10^10 for precision)"
            ],
            "name": "getRewardPerSecond",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getTotalStaked",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "getFeeReceiver",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getPerformanceFeePercent",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u32"
                }
            ]
        },
        {
            "name": "getRewardPeriodEnd",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getRewardStartTime",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getFunder",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "Address"
                }
            ]
        },
        {
            "name": "getLastUpdateTime",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "u64"
                }
            ]
        },
        {
            "name": "getRewardPerTokenStored",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "docs": [
                "Stake SFT/NFTs.",
                "Payment: 1 single payment accepted."
            ],
            "name": "stake",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Untake SFT/NFTs by sending a staked NFT receipt.",
                "Payment: 1 single payment accepted."
            ],
            "name": "unstake",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "docs": [
                "Claim rewards.",
                "Payment: 1 single \"staked NFT\"."
            ],
            "name": "claimRewards",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [],
            "outputs": []
        },
        {
            "name": "getPendingRewards",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "staked_amount",
                    "type": "BigUint"
                },
                {
                    "name": "user_reward_per_token_paid",
                    "type": "BigUint"
                },
                {
                    "name": "user_rewards",
                    "type": "BigUint"
                }
            ],
            "outputs": [
                {
                    "type": "BigUint"
                },
                {
                    "type": "BigUint"
                },
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "issueStakedNftCollection",
            "mutability": "mutable",
            "payableInTokens": [
                "EGLD"
            ],
            "inputs": [
                {
                    "name": "token_name",
                    "type": "bytes"
                },
                {
                    "name": "token_ticker",
                    "type": "bytes"
                }
            ],
            "outputs": []
        },
        {
            "name": "fundRewardsAndSetDuration",
            "mutability": "mutable",
            "payableInTokens": [
                "*"
            ],
            "inputs": [
                {
                    "name": "duration_in_seconds",
                    "type": "u64"
                }
            ],
            "outputs": []
        },
        {
            "name": "setPerformanceFeePercent",
            "onlyAdmin": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "fee_percent",
                    "type": "u32"
                }
            ],
            "outputs": []
        },
        {
            "name": "setFeeReceiver",
            "onlyAdmin": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_receiver",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "setFunder",
            "onlyAdmin": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "new_account",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "getCurrentRewardPerToken",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "BigUint"
                }
            ]
        },
        {
            "name": "isAdmin",
            "mutability": "readonly",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": [
                {
                    "type": "bool"
                }
            ]
        },
        {
            "name": "addAdmin",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "removeAdmin",
            "onlyOwner": true,
            "mutability": "mutable",
            "inputs": [
                {
                    "name": "address",
                    "type": "Address"
                }
            ],
            "outputs": []
        },
        {
            "name": "getAdmins",
            "mutability": "readonly",
            "inputs": [],
            "outputs": [
                {
                    "type": "variadic<Address>",
                    "multi_result": true
                }
            ]
        }
    ],
    "events": [
        {
            "identifier": "stake",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "amount",
                    "type": "BigUint",
                    "indexed": true
                },
                {
                    "name": "nonce",
                    "type": "u64",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "unstake",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "amount",
                    "type": "BigUint",
                    "indexed": true
                },
                {
                    "name": "nonce",
                    "type": "u64",
                    "indexed": true
                }
            ]
        },
        {
            "identifier": "claim",
            "inputs": [
                {
                    "name": "user",
                    "type": "Address",
                    "indexed": true
                },
                {
                    "name": "user_amount",
                    "type": "BigUint",
                    "indexed": true
                },
                {
                    "name": "fee_amount",
                    "type": "BigUint",
                    "indexed": true
                }
            ]
        }
    ],
    "esdtAttributes": [],
    "hasCallback": true,
    "types": {}
}
